upstream backend {
  <% @servers.each do |k,v| %>
    server <%= v %>;
  <% end %>
}

server {
  location / {
    # change to https for non-terminating ssl connections
    proxy_pass              http://backend;
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
  }

  # SSL configurations
  listen                    443 ssl spdy;
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

  ssl_session_cache         shared:SSL:10m;    # 10MB -> ~40,000 sessions.
  ssl_session_timeout       24h;               # 24 hours
  ssl_buffer_size           1400;              # 1400 bytes to fit in one MTU

  ssl_certificate           /etc/nginx/ssl/nginx-test.crt;
  ssl_certificate_key       /etc/nginx/ssl/nginx-test.key;

  # courtesy of https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_Ciphersuite
  ssl_prefer_server_ciphers on;
  ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;

  ssl_dhparam               /etc/nginx/ssl/dhparam.pem;

  add_header                Strict-Transport-Security "max-age=31536000; includeSubDomains";

  ssl_stapling              on;
  ssl_stapling_verify       on;
  ssl_trusted_certificate   /etc/ssl/private/ca-certs.pem;
  resolver                  8.8.8.8 8.8.4.4;
}